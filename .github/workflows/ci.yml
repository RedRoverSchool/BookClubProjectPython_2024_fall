# For more information see:
# https://docs.github.com/en/actions/use-cases-and-examples/building-and-testing/building-and-testing-python
# https://github:com/actions/upload-artifact
# https://github.com/actions/checkout
# https://github.com/actions/setup-python
# https://github.com/peaceiris/actions-gh-pages
name: CI - BookClubQA

on:
  pull_request:
    branches: [ main ]  # Запускать workflow при пуше в ветку main

jobs:
  run-tests:
    name: Run tests
    runs-on: ubuntu-latest

    steps:
      # Клонируем репозиторий
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      # Настройки Python
      - name: Set up Python
        uses: actions/setup-python@v5.2.0
        with:
          python-version: "3.12"  # Установка нужной версии Python

        # Установка зависимостей из requirements.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip  # Обновление pip
          pip install -r requirements.txt  

      - name: Verify installed packages
        run: pip freeze

      # Установка необходимых браузеров Playwright Chrome.
      - name: Install Playwright browsers
        run: |
          python -m playwright install chromium

      #Установка линтера Ruff
      - name: Install the code linting and formatting tool Ruff
        run: pip install ruff

      # Проверка форматирования кода Ruff
      - name: Lint code with Ruff
        run: ruff check --output-format=github --target-version=py312

      - name: Check code formatting with Ruff
        run: ruff format --diff --no-cache --target-version=py312
        continue-on-error: true # Не останавливает CI, если есть проблемы с форматированием(сомнительно)

      # Установка Allure
      - name: Install Allure
        run: |
          sudo wget https://github.com/allure-framework/allure2/releases/download/2.29.0/allure-2.29.0.tgz \
          && sudo tar -zxvf allure-2.29.0.tgz -C /opt/ \
          && sudo ln -s /opt/allure-2.29.0/bin/allure /usr/bin/allure
          allure --version

        # Запуск всех тестов(стоп на 1 упавшем тесте, мин инф о тестах)
      - name: Run tests
        run: |
          pytest -s --alluredir=allure-results --disable-warnings -q
        env:
          PYTHONDONTWRITEBYTECODE: 1
          PYTHONUNBUFFERED: 1

      - name: Check Allure Report Files
        run: |
          echo "Checking files in allure-results..."
          ls -la allure-results
          du -sh allure-results

      # Генерация отчета Allure
      - name: Generate Allure Report
        run: |
          allure generate -c allure -o allure-reports
        continue-on-error: true

      # Сохранение отчета как артефакт
      - name: Upload Allure Report as an Artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-reports
          path: allure-reports
        continue-on-error: true

      # Сохранение логов как артефактов в случае сбоя
      - name: Save test logs
        if: failure()
        run: |
          pytest --log-cli-level=INFO --capture=tee-sys --disable-warnings > pytest.log || true
        shell: bash

        # Загрузка логов как артефактов(в случаем сбоя)
      - name: Upload logs
        if: failure()
        uses: actions/upload-artifact@v4.4.3
        with:
          name: pytest-logs
          path: pytest.log